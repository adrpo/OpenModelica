defaultMakefileTarget = Makefile.omdev.mingw
REALPATH = $(realpath .)
OMBUILDDIR=$(REALPATH)/build
CMAKE = $(OMDEV)/bin/cmake/bin/cmake
CMAKE_TARGET = "MSYS Makefiles"

PKG_CONFIG_BIN = $(OMDEV)/lib/gtk+-2.24.10/bin
ifeq (MINGW32,$(findstring MINGW32,$(shell uname)))
DBUS_INCLUDE_DIR = $(OMDEV)/tools/msys/mingw32/include/dbus-1.0/
DBUS_INCLUDE_LIB_DIR = $(OMDEV)/tools/msys/mingw32/lib/dbus-1.0/include/
DBUS_PATH = $(OMDEV)/tools/msys/mingw32/bin/
BOOST_PATH = $(OMDEV)/lib/3rdParty/boost-1_55/
OSG_PATH = $(OMDEV)/tools/msys/mingw32/
PKG_CONFIG_PATH=$(OMDEV)/tools/msys/mingw32/lib/pkgconfig
else # mingw64
DBUS_INCLUDE_DIR = $(OMDEV)/tools/msys/mingw64/include/dbus-1.0/
DBUS_INCLUDE_LIB_DIR = $(OMDEV)/tools/msys/mingw64/lib/dbus-1.0/include/
DBUS_PATH = $(OMDEV)/tools/msys/mingw64/bin/
BOOST_PATH = $(OMDEV)/tools/msys/mingw64/include
OSG_PATH = $(OMDEV)/tools/msys/mingw64/
PKG_CONFIG_PATH=$(OMDEV)/tools/msys/mingw64/lib/pkgconfig
endif

.PHONY: omc omc-diff omlibrary-core omplot omedit omnotebook omshell omoptim modelica3d

all: omc omc-diff omlibrary-core

omc:
	$(MAKE) -f $(defaultMakefileTarget) -C OMCompiler OMBUILDDIR=$(OMBUILDDIR)

omc-diff: omc
	$(MAKE) -C testsuite/ -f Makefile omc-diff OMBUILDDIR=$(OMBUILDDIR)

omlibrary-core:
	$(MAKE) -C libraries BUILD_DIR=$(OMBUILDDIR)/lib/omlibrary core
	#$(MAKE) -f $(defaultMakefileTarget) modelica3d

omlibrary-all:
	$(MAKE) -C libraries BUILD_DIR=$(OMBUILDDIR)/lib/omlibrary all
	#$(MAKE) -f $(defaultMakefileTarget) modelica3d

omplot:
	$(MAKE) -C OMPlot -f $(defaultMakefileTarget) OMBUILDDIR=$(OMBUILDDIR)

omedit: omplot
	$(MAKE) -f $(defaultMakefileTarget) -C OMEdit OMBUILDDIR=$(OMBUILDDIR)

omnotebook: omplot
	$(MAKE) -f $(defaultMakefileTarget) -C OMNotebook/OMNotebook/OMNotebookGUI OMBUILDDIR=$(OMBUILDDIR)

omshell:
	$(MAKE) -f $(defaultMakefileTarget) -C OMShell/OMShell/OMShellGUI OMBUILDDIR=$(OMBUILDDIR)

omoptim: omplot
	$(MAKE) -f $(defaultMakefileTarget) -C OMOptim OMBUILDDIR=$(OMBUILDDIR)

qtclients: omplot omedit omnotebook omshell omoptim

clean-qtclients:


simulationruntimecmsvc:
	$(MAKE) -C OMCompiler -f $(defaultMakefileTarget) OMBUILDDIR=$(OMBUILDDIR) simulationruntimecmsvc

runtimeCPPmsvcinstall:
	$(MAKE) -C OMCompiler -f $(defaultMakefileTarget) OMBUILDDIR=$(OMBUILDDIR) runtimeCPPmsvcinstall

runtimeCPPinstall:
	$(MAKE) -C OMCompiler -f $(defaultMakefileTarget) OMBUILDDIR=$(OMBUILDDIR) runtimeCPPinstall

testlogwindows:
	$(MAKE) -C testsuite -f Makefile ReferenceFiles
	(time $(MAKE) -C testsuite -f Makefile 2>&1 | tee testsuite/testsuite-trace.txt) || true
	(time $(MAKE) -C testsuite/openmodelica/cruntime/msvc/ -f Makefile >> testsuite/testsuite-trace.txt 2>&1) || true
	(export RTEST_OMCFLAGS=+target=msvc ; time $(MAKE) -C testsuite/openmodelica/cppruntime/ -f Makefile >> testsuite/testsuite-trace.txt 2>&1) || true
	echo "log is in testsuite/testsuite-trace.txt"
	fgrep -v "... ok" testsuite/testsuite-trace.txt
	echo "Successful tests: "
	cat testsuite/testsuite-trace.txt | grep "... ok" | wc -l
	echo "Failed models: "
	cat testsuite/testsuite-trace.txt | grep "==== Log" | wc -l
	cat testsuite/testsuite-trace.txt | grep "==== Log" ; echo DONE!

builddir_lib=$(OMBUILDDIR)/lib
builddir_share=$(OMBUILDDIR)/share
IDLPYTHON = $(OMDEV)/lib/omniORB-4.2.0-msvc-10/bin/x86_win32/omniidl -bpython -Wbglobal=_OMCIDL -Wbpackage=OMPythonIDL
IDLPYTHONTARGET = $(builddir_share)/omc/scripts/PythonInterface/OMPythonIDL/omc_communication_idl.py
IDLFILE=OMCompiler/Compiler/runtime/omc_communication.idl

install-python: $(IDLPYTHONTARGET)

.PHONY: script-files-python

script-files-python: mkbuilddirs-python
	# copy library files neeeded by OMPython
	(cp -puf $(OMDEV)/lib/omniORB-4.2.0-msvc-10/lib/x86_win32/_omnipy.pyd $(builddir_lib)/python)
	(cp -puf $(OMDEV)/lib/omniORB-4.2.0-msvc-10/lib/python/omniORB/__init__.py $(builddir_lib)/python/omniORB/)
	(cp -puf $(OMDEV)/lib/omniORB-4.2.0-msvc-10/lib/python/omniORB/boxes_idl.py $(builddir_lib)/python/omniORB/)
	(cp -puf $(OMDEV)/lib/omniORB-4.2.0-msvc-10/lib/python/omniORB/CORBA.py $(builddir_lib)/python/omniORB/)
	(cp -puf $(OMDEV)/lib/omniORB-4.2.0-msvc-10/lib/python/omniORB/corbaidl_idl.py $(builddir_lib)/python/omniORB/)
	(cp -puf $(OMDEV)/lib/omniORB-4.2.0-msvc-10/lib/python/omniORB/minorCodes.py $(builddir_lib)/python/omniORB/)
	(cp -puf $(OMDEV)/lib/omniORB-4.2.0-msvc-10/lib/python/omniORB/PortableServer.py $(builddir_lib)/python/omniORB/)
	(cp -puf $(OMDEV)/lib/omniORB-4.2.0-msvc-10/lib/python/omniORB/tcInternal.py $(builddir_lib)/python/omniORB/)
	# copy OMPython files
	cp -rfp OMPython/setup.py $(builddir_share)/omc/scripts/PythonInterface
	cp -rfp OMPython/OMPython/* $(builddir_share)/omc/scripts/PythonInterface/OMPython

$(IDLPYTHONTARGET) : $(IDLFILE) script-files-python
	$(IDLPYTHON) -C$(builddir_share)/omc/scripts/PythonInterface $(IDLFILE)

mkbuilddirs-python:
	# create directories
	mkdir -p $(builddir_lib)/python/omniORB
	mkdir -p $(builddir_share)/omc/scripts/PythonInterface/OMPython/OMParser

modelica3d:
	cd libraries/git/Modelica3D && mkdir -p build
	cd libraries/git/Modelica3D/build && $(CMAKE) -DCMAKE_VERBOSE_MAKEFILE:Bool=ON -DCMAKE_COLOR_MAKEFILE:Bool=OFF -DOSG_BACKEND=1 -DDBUS_INCLUDE_DIR=$(DBUS_INCLUDE_DIR) -DDBUS_INCLUDE_LIB_DIR=$(DBUS_INCLUDE_LIB_DIR) -DDBUS_LIBRARY=$(DBUS_PATH) -DBOOST_ROOT=$(BOOST_PATH) -DCMAKE_PREFIX_PATH=$(OSG_PATH) -DCMAKE_PROGRAM_PATH=$(PKG_CONFIG_BIN) -DPKG_CONFIG_PATH=$(PKG_CONFIG_PATH) -DUSE_OMC=0 .. -G $(CMAKE_TARGET)
	$(MAKE) -C libraries/git/Modelica3D/build
	cp -p libraries/git/Modelica3D/build/lib/modcount/libmodcount.a libraries/git/Modelica3D/build/lib/modbus/libmodbus.a $(OMBUILDDIR)/lib/omc/
	mkdir -p $(OMBUILDDIR)/lib/omlibrary-modelica3d/blender2.59 $(OMBUILDDIR)/lib/omlibrary-modelica3d/osg-gtk/dbus-python/etc
	# copy the dbus static lib required during the simulation
	cp -rp $(OMDEV)/lib/dbus-1.6.0-win32/bin/libdbus-1.a $(OMBUILDDIR)/lib/omc/
	cp -p libraries/git/Modelica3D/examples/multibody/src/modelica/*.mo $(OMBUILDDIR)/lib/omlibrary-modelica3d/
	cp -p libraries/git/Modelica3D/backends/blender2.59/dbus-server.py $(OMBUILDDIR)/lib/omlibrary-modelica3d/blender2.59/
	cp -p libraries/git/Modelica3D/backends/osg-gtk/python/dbus-server.py $(OMBUILDDIR)/lib/omlibrary-modelica3d/osg-gtk/
	# copy the dbus-python bindings binaries required by osg-gtk python script
	cp -rp $(OMDEV)/lib/dbus-python-1.1.1/lib/site-packages/* $(OMBUILDDIR)/lib/omlibrary-modelica3d/osg-gtk/dbus-python/
	cp -rp $(OMDEV)/lib/dbus-python-1.1.1/bin/* $(OMBUILDDIR)/lib/omlibrary-modelica3d/osg-gtk/dbus-python/
	cp -rp $(OMDEV)/lib/dbus-python-1.1.1/etc/* $(OMBUILDDIR)/lib/omlibrary-modelica3d/osg-gtk/dbus-python/etc
	# copy the required gtk binaries
	cp -p -u $(OMDEV)/lib/gtk+-2.24.10/bin/*.dll $(OMBUILDDIR)/lib/omlibrary-modelica3d/osg-gtk/
	# copy the required modelica3D binaries
	cp -p libraries/git/Modelica3D/build/backends/osg-gtk/libm3d-osg-gtk.* libraries/git/Modelica3D/build/lib/proc3d/libproc3d.* $(OMBUILDDIR)/lib/omlibrary-modelica3d/osg-gtk/
	# copy the required osg binaries
	mkdir -p  $(OMBUILDDIR)/lib/omlibrary-modelica3d/osg-gtk/osgPlugins-2.8.3
	cp -p -u $(OMDEV)/lib/openscenegraph-2.8.3-mingw/bin/*.dll $(OMBUILDDIR)/lib/omlibrary-modelica3d/osg-gtk/
	cp -p -u $(OMDEV)/lib/openscenegraph-2.8.3-mingw/bin/osgPlugins-2.8.3/*.dll $(OMBUILDDIR)/lib/omlibrary-modelica3d/osg-gtk/osgPlugins-2.8.3/

clean-python:
	rm -rf OMPython/build/ OMPython/OMPythonIDL/ OMPython/OMPython/_GlobalID* OMPython/OMPython/omc_communication_idl.py

clean:
	$(MAKE) -f $(defaultMakefileTarget) -C OMCompiler clean OMBUILDDIR=$(OMBUILDDIR)
	test ! -d $(OMBUILDDIR) || rm -rf $(OMBUILDDIR)

LIBGITDIRS = `ls libraries/git`
	
gitclean:
	git submodule foreach --recursive 'git clean -fdx -e /git -e /svn'
	git clean -fdx -e OpenModelicaSetup -e .project -e .externalToolBuilders/OMDev-MINGW-OpenModelicaBuilder.launch
	for d in $(LIBGITDIRS); do git clean -fdx libraries/git/$$d; done

